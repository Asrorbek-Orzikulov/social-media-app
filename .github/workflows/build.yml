name: Build Docker Image from Code
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: testing-env
    env:
      # sql
      SQL_HOSTNAME: ${{ secrets.SQL_HOSTNAME }}
      SQL_PORT: ${{ secrets.SQL_PORT }}
      SQL_USERNAME: ${{ secrets.SQL_USERNAME }}
      SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
      SQL_DB_NAME: ${{ secrets.SQL_DB_NAME }}
      # oauth
      OAUTH_SECRET_KEY: ${{ secrets.OAUTH_SECRET_KEY}}
      OAUTH_ALGORITHM: ${{ secrets.OAUTH_ALGORITHM }}
      OAUTH_EXPIRY_MINUTES: ${{ secrets.OAUTH_EXPIRY_MINUTES }}
      # mongo
      MONGO_HOSTNAME: ${{ secrets.MONGO_HOSTNAME }}
      MONGO_USERNAME: ${{ secrets.MONGO_USERNAME }}
      MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
      MONGO_DB_NAME: ${{ secrets.MONGO_DB_NAME }}
      VIDEOS_COLLECTION: ${{ secrets.VIDEOS_COLLECTION }}
      AUDIOS_COLLECTION: ${{ secrets.AUDIOS_COLLECTION }}
      # redis
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}

    services:
      postgres:
        image: postgres:alpine3.19
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ secrets.SQL_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.SQL_PASSWORD }}
          POSTGRES_DB: ${{ secrets.SQL_DB_NAME }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Pull Git repo
        uses: actions/checkout@v4
      - name: Install Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry==1.8.2
          poetry install
      - name: Run all tests
        run:
          poetry run pytest --disable-warnings
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          push: False
          tags: social-media-backend:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}